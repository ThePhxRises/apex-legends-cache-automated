#!/bin/bash

SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]:-$0}"; )" &> /dev/null && pwd 2> /dev/null; )";

if [[ "$SCRIPT_DIR" = */DXVK_state_cache ]] ## Check if directory is a proper directory
then
wget https://github.com/bcook254/apex-legends-cache/raw/main/r5apex.dxvk-cache -O "$SCRIPT_DIR"/r5apex.new.dxvk-cache ## Download new cache file

if [ ! -f "$SCRIPT_DIR"/dxvk-cache-tool ] ## Check if the cache tool is installed
then
    echo "Merger tool not found. Downloading..."
    wget https://github.com/DarkTigrus/dxvk-cache-tool/releases/download/v1.1.2/dxvk-cache-tool -O "$SCRIPT_DIR"/dxvk-cache-tool ## Download dxvk-cache-tool
    chmod +x "$SCRIPT_DIR"/dxvk-cache-tool ## Make dxvk-cache-tool executable
else
    echo "Merger tool found."
fi

if [ ! -f "$SCRIPT_DIR"/r5apex.dxvk-cache ] ## Check if a cache exists
then
    echo "Cache file does not exist. Adding..."
    mv "$SCRIPT_DIR"/r5apex.new.dxvk-cache "$SCRIPT_DIR"/r5apex.dxvk-cache ## Rename "Add" cache file.
    notify-send "Installed Apex Legends DXVK State Cache" "State Cache was not found, installed from GitHub."
    echo "DXVK State Cache installed to "$SCRIPT_DIR"/r5apex.dxvk-cache."
else
    echo "Cache file found. Merging..."
    mv "$SCRIPT_DIR"/r5apex.dxvk-cache "$SCRIPT_DIR"/r5apex.old.dxvk-cache ## Rename Old Cache File
    DXVK_OUTPUT="$("$SCRIPT_DIR"/dxvk-cache-tool "$SCRIPT_DIR"/r5apex.old.dxvk-cache "$SCRIPT_DIR"/r5apex.new.dxvk-cache -o "$SCRIPT_DIR"/r5apex.dxvk-cache| grep -Po '(2/2)...\s*.\s\K.*')" ## Merge cache files
    rm "$SCRIPT_DIR"/r5apex.old.dxvk-cache "$SCRIPT_DIR"/r5apex.new.dxvk-cache ## Remove old cache files
    notify-send "Updated Apex Legends DXVK State Cache" "$DXVK_OUTPUT added from GitHub."
    echo "DXVK State Cache updated, "$DXVK_OUTPUT" added to "$SCRIPT_DIR"/r5apex.dxvk-cache."
fi
else
echo $'\n'"You did not install the tool in the proper directory. Please move the script and cache file into the proper directory." ## Warn user to move the files manually to the proper location.
fi
